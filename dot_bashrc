export PATH="$PATH:$HOME/.local/bin:/opt/nvim/bin"
source "$HOME/.cargo/env"

# If not running interactively, dont do anything
[[ $- != *i* ]] && return

# We all know WSL is the best so fix their issues :) 
if [ ! -z ${WSL_DISTRO_NAME-} ] && [ ! -d "/run/user/$UID" ]; then 
	echo -e "Sorry to keep you from your work...\nUnfortunately, it has been determined that your WSL has not created a \`/run/user/$UID\` folder for you.\nSince this requires privileged rights, your password is required:\n";
  read -r -p "Continue? [Y/n]" response
  response=${response,,} # tolower
  if [[ $response =~ ^(y| ) ]] || [[ -z $response ]]; then
    sudo mkdir -p /run/user/$UID && sudo chown $USER:$USER /run/user/$UID;
  fi
fi

if command -v mise &> /dev/null; then
    eval "$(mise activate bash)"
    eval "$(mise hook-env -s bash)"
fi

# Check if zellij or tmux should be used as terminal mutiplexer
if [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ] && [ -z "$ZELLIJ" ]; then
  # Fallback: tmux
  if command -v tmux &> /dev/null; then
	  exec tmux
  fi

  ZELLIJ_AUTO_ATTACH=true
  # Use Zellij over tmux if possible
  if command -v zellij &> /dev/null; then
	  if [[ "$ZELLIJ_AUTO_ATTACH" == "true" ]]; then
		  zellij attach -c main && exit
	  else
		  zellij && exit
	  fi
  fi

fi


# Start starship
if command -v starship &> /dev/null; then
	eval "$(starship init bash)"
fi
# eval "$(oh-my-posh init bash --config ~/.config/oh-my-posh/config.json)"
